
import crack.lang die, ManagedBuffer;
import crack.io cout;
import crack.net sockconsts, SockAddrIn, Socket;
import "libc.so.6" perror, sleep;

void perror(byteptr s);
int sleep(int d);

# create a server socket, bind to a port and listen.
srv := Socket(sockconsts.AF_INET, sockconsts.SOCK_STREAM, 0);
srv.setReuseAddr(true);
if (!srv.bind(SockAddrIn(sockconsts.INADDR_ANY, 9923)))
    die('bind failed');
if (!srv.listen(5))
    die('listen failed');

# create a client socket
cln := Socket(sockconsts.AF_INET, sockconsts.SOCK_STREAM, 0);
if (!cln.connect(SockAddrIn(127, 0, 0, 1, 9923)))
    die('connect failed');

# get the new connection on the server side.
accepted := srv.accept();

# send a string from the server, make sure we can receive it in the client.
cln.send('test string', 0);
ManagedBuffer buf = {1024};
buf.size = uint(accepted.sock.recv(buf, 0));
fromClient := String(buf, true);
if (fromClient != 'test string')
    die ('did not receive "test string" from client');

# send a string from client to server
accepted.sock.send('another test string', 0);
buf = ManagedBuffer(1024);
buf.size = uint(cln.recv(buf, 0));

fromServer := String(buf, true);
if (fromServer != 'another test string')
    die('did not receive "another test string" from server');

cout `ok\n`;
