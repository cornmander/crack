# Copyright 2010 Google Inc.

import crack.io cout, StringFormatter;
@import test.testann emitOk, incrButZero, testIsChecks, storeScope, getScope,
    createAnnotations, wrap, user_static;

if (@incrButZero 0 != 0)
    cout `incrButZero 0 failed\n`;
if (@incrButZero 1 != 2)
    cout `incrButZero 1 failed\n`;

if (@testIsChecks if != 1)
    cout `checking 'if' token failed\n`;
if (@testIsChecks foo != 2)
    cout `checking identifier token failed\n`;

@storeScope a
if (@getScope a != 0)
    cout `module scope failed\n`;

void f() { @storeScope b }
if (@getScope b != 2)
    cout `function scope failed\n`;

class A { @storeScope c }
if (@getScope c != 3)
    cout `class scope failed\n`;

class B { void x () { @storeScope d } }
if (@getScope d != 2)
    cout `method scope failed\n`;

@createAnnotations
if (!@created)
    cout `failed to create a new annotation\n`;

if (@createdWithCallback != 100)
    cout `failed to create an annotation with a callback\n`;

StringFormatter result;

@wrap
void f1() { result `in f`; }

# callbacks should have been removed
void f2() { result `in g`; }

f1();
f2();

if (result.createString() != '{in f}in g')
    cout `failed to install or remove callbacks, got: 
$(result.createString())\n`;

class C {
    @user_static
    bool works() { return true; }
}

if (!C().works())
    cout `"static" annotation failed`;

@emitOk
