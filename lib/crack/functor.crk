# A couple of functor implementations
# Copyright 2011 Google Inc.
# 
#   This Source Code Form is subject to the terms of the Mozilla Public
#   License, v. 2.0. If a copy of the MPL was not distributed with this
#   file, You can obtain one at http://mozilla.org/MPL/2.0/.
# 

@import crack.ann implements, interface;

@interface Functor0[RetT] {
    @abstract RetT oper call();
}

@interface Functor1[RetT, T1] {
    @abstract RetT oper call(T1 p1);
}

@interface Functor2[RetT, T1, T2] {
    @abstract RetT oper call(T1 p1, T2 p2);
}

@interface Functor3[RetT, T1, T2, T3] {
    @abstract RetT oper call(T1 p1, T2 p2, T3 p3);
}

@interface Functor4[RetT, T1, T2, T3, T4] {
    @abstract RetT oper call(T1 p1, T2 p2, T3 p3, T4 p4);
}

@interface Functor5[RetT, T1, T2, T3, T4, T5] {
    @abstract RetT oper call(T1 p1, T2 p2, T3 p3, T4 p4, T5 p5);
}

class Function0[RetT] : Object @implements Functor0[RetT] {
    function[RetT] func;
    oper init(function[RetT] func) : func = func {}
    RetT oper call() { return func(); }
}

class Function1[RetT, T1] : Object @implements Functor1[RetT, T1] {
    function[RetT, T1] func;
    oper init(function[RetT, T1] func) : func = func {}
    RetT oper call(T1 p1) { return func(p1); }
}

class Function2[RetT, T1, T2] : Object @implements Functor2[RetT, T1, T2] {
    function[RetT, T1, T2] func;
    oper init(function[RetT, T1, T2] func) : func = func {}
    RetT oper call(T1 p1, T2 p2) { return func(p1, p2); }
}

class Function3[RetT, T1, T2, T3] :
        Object
        @implements Functor3[RetT, T1, T2, T3] {
    function[RetT, T1, T2, T3] func;
    oper init(function[RetT, T1, T2, T3] func) : func = func {}
    RetT oper call(T1 p1, T2 p2, T3 p3) { return func(p1, p2, p3); }
}

class Function4[RetT, T1, T2, T3, T4] : Object @implements Functor4[RetT, T1, T2, T3, T4] {
    function[RetT, T1, T2, T3, T4] func;
    oper init(function[RetT, T1, T2, T3, T4] func) : func = func {}
    RetT oper call(T1 p1, T2 p2, T3 p3, T4 p4) { return func(p1, p2, p3, p4); }
}

class Function5[RetT, T1, T2, T3, T4, T5] :
        Object @implements
        Functor5[RetT, T1, T2, T3, T4, T5] {
    function[RetT, T1, T2, T3, T4, T5] func;
    oper init(function[RetT, T1, T2, T3, T4, T5] func) : func = func {}
    RetT oper call(T1 p1, T2 p2, T3 p3, T4 p4, T5 p5) {
        return func(p1, p2, p3, p4, p5);
    }
}
