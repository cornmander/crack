# Copyright 2010 Google Inc.

import crack.io cout;
@import crack.exp.ann define;

@define oneHundred() { 100 }
@define echo(x) { x }
@define equals(a, b) { (a == b) }
@define func(name) { int name() { return 300; } }
@define concat(a, b) { a$$b }
@define stringify(a) { $a }

if (@oneHundred() != 100)
    cout `macro with no args failed\n`;

if (@echo(200) != 200)
    cout `macro with one arg failed\n`;

if (!@equals(1, 1)) 
    cout `macro with two args failed\n`;

@func(f);
if (f() != 300)
    cout `macro with function definition fails\n`;

int @concat(i, x) = 400;
if (ix != 400)
    cout `concatenation failed\n`;

if (@stringify(foo) != 'foo')
    cout `stringification failed\n`;

if (@stringify((x == 'test')) != "( x == 'test' )")
    cout `stringification of multi-token value failed.\n`;

cout `ok\n`;


