# Copyright 2010 Google Inc.

import crack.lang die, ManagedBuffer, SubString, CString;
import crack.io cout;

if ('test' >= 'test string')
    die('test >= test string');

if ('bad magic' <= 'bad')
    die('bad magic <= bad');

if ('foo' != 'foo')
    die('foo != foo');

buf := ManagedBuffer(10);
buf.move(0, '1234567890');
s := String(buf, true);
if (s.size != 10)
    die('sizeof string created from ManagedBuffer is wrong');
if (s != '1234567890')
    die("didn't copy from a ManagedBuffer correctly");

s = String('test of copied substrings', 8, 6);
if (s != 'copied')
    die("didn't copy substring correctly.");

s = SubString('test of referenced substring', 8, 10);
if (s != 'referenced')
    die('failed to create substring reference.');

cs := CString("test 123");
if (cs.size != 8)
    die('failed to create c string');
if (cs.buffer[cs.size] != 0)
    die('failed to null terminate');

// string methods
s = String("one.two.three");
if (s.rfind("."[0]) != 7)
    die('rfind failed');
if (s.rfind("@"[0]) != -1)
    die('rfind nofind failed');
if (s.lfind("."[0]) != 3)
    die('lfind failed');
if (s.lfind("@"[0]) != -1)
    die('lfind nofind failed');

cout `ok\n`;