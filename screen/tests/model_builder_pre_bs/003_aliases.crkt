%%TEST%%
aliases
%%ARGS%%
%%FILE%%
import crack.lang substr;
import test.testmod aImportVar;

# Verify only global variables from the module show up.
int i;

# Verify that only local overloads show up (imported overloads should be
# aliases)
void substr() {}
%%EXPECT%%
.builtin.void __CrackBadCast(.builtin.Class curType, .builtin.Class newType, )
.builtin.int __getArgc()
.builtin.array[.builtin.byteptr] __getArgv()
alias aImportVar = test.testmod.aImportVar
.builtin.int i
alias crack.lang.SubString substr(crack.lang.SubString target, .builtin.int pos, .builtin.uint len, )
alias crack.lang.SubString substr(crack.lang.SubString target, .builtin.int pos, )
alias crack.lang.SubString substr(crack.lang.String target, .builtin.int pos, .builtin.uint len, )
alias crack.lang.SubString substr(crack.lang.String target, .builtin.int pos, )
.builtin.void substr()
%%STDIN%%
