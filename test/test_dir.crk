# Copyright 2010 Google Inc.
# tests of crack.dir

import crack.io cout, StringFormatter;
import crack.sys argv;
import crack.exp.dir Directory;
import crack.exp.file FileInfo;

String base;
if (argv.count() > 1)
    base = argv[1] + '/';
else
    base = '';

if (true) {
    Directory d = {base + 'lib'};
    StringFormatter result = {};
    
    i := d.dirIter();
    while (i.nx())
        result `$(Directory.cast(i.elem()).name)`;
    
    s := result.createString();
    if (s != base + 'lib/crack')
        cout `failed to get lib/crack, got: $s\n`;
}

if (true) {
    Directory d = {base + 'lib/crack'};
    
    FileInfo target;
    i := d.fileInfoIter();
    while (i.nx()) {
        info := FileInfo.cast(i.elem());
        if (info.name == base + 'lib/crack/lang.crk')
            target = info;
    }
    
    if (!target)
        cout `failed to find $(base)lib/crack/lang.crk\n`;
    
    if (target.basename(false) != 'lang.crk')
        cout `basename with extension failed\n`;
    
    if (target.basename(true) != 'lang')
        cout `basename without extension failed\n`;
    
    if (target.dirname() != base + 'lib/crack')
        cout `dirname failed\n`;
}

cout `ok\n`;
