

import crack.io cout;
import crack.strutil StringArray;
import crack.fs cwd, makePath, sysfs, Path, RealPath;

tempFile := RealPath('writer.out');
tempFile.writer().write('this is a test');

if (!RealPath('writer.out').exists())
    cout `FAILED exists check for written file\n`;

if (tempFile.makeFullReader().readAll() != 'this is a test')
    cout `FAILED full reader readAll()\n`;
tempFile.delete();
if (tempFile.exists())
    cout `FAILED file delete\n`;

tempDir := RealPath('tempdir');
tempDir.makeDir();

if (!tempDir.exists())
    cout `FAILED making directory\n`;

if (!tempDir.isDir())
    cout `FAILED isDir() check on directory\n`;

Path foo = tempDir/'foo', bar = tempDir/'bar';
foo.writeAll('this is foo');
bar.writeAll('this is bar');
if (makePath('tempdir/foo').makeFullReader().readAll() != 'this is foo')
    cout `FAILED reading a file through makePath()\n`;
if ((cwd/'tempdir/foo').makeFullReader().readAll() != 'this is foo')
    cout `FAILED reading a file through cwd\n`;
cwd.set(cwd/'tempdir');
if (!(cwd/'foo').exists())
    cout `FAILED changing current directory\n`;
cwd.set('..');
if (!(cwd/'tempdir').exists())
    cout `FAILED changing directory to parent\n`;

if (foo.getSize() != 11)
    cout `FAILED file size() method\n`;

StringArray children = {2};
for (child :in tempDir.children())
    children.append(child.getName());

children.sort();
if (children != StringArray!['bar', 'foo'])
    cout `FAILED creating children, wanted foo, bar, got: $children\n`;

foo.delete();
bar.delete();

if (tempDir.exists())
    tempDir.delete();

if ((sysfs/'a/b/c').getFullName() != '/a/b/c')
    cout `FAILED sysfs object.\n`;

cout `ok\n`;
