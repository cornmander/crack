# Copyright 2011 Google Inc.
# test of readers

import crack.runtime random;
import crack.io cout, StringReader, StringWriter;
import crack.exp.readers FullReader;

# Construct a string writer full of random data
arr := array[int32](10000);
for (int i = 0; i < 10000; ++i)
    arr[i] = int32(random());
String data = {byteptr(arr), 40000, true};


if (1) {
    StringReader low = {data};
    result := FullReader(low).readAll();
    if (result != data)
        cout `FAILED FullReader simple readAll()\n`;
}

if (1) {
    StringReader low = {data};
    full := FullReader(low);
    if (full.readLine() + full.readAll() != data)
        cout `FAILED FullReader line read + reaAll()\n`;
}

# iterate over a bunch of lines.
if (1) {
    # length of this line is prime, it should at least be odd (and thus 
    # relatively prime to 1024)
    sampleLine := 'all work and no play makes jack a dull boy\n';
    StringWriter temp = {};
    for (int i = 0; i < 10000; ++i)
        temp.write(sampleLine);
    
    StringReader low = {temp.createString()};
    full := FullReader(StringReader(temp.createString()));
    count := 0;
    for (line :in full) {
        if (line != sampleLine)
            cout `FAILED line iteration, bad line $count: $line\n`;
        ++count;
    }
    if (count != 10000)
        cout `FAILED line iteration: bad line count $count != 10000\n`;
}

cout `ok\n`;
